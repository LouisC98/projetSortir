{% extends 'base.html.twig' %}

{% block title %}{{ group.id ? 'Modifier' : 'Créer' }} un groupe privé{% endblock %}

{% block body %}
<div class="container mx-auto px-4 py-8">
    <div class="max-w-4xl mx-auto">
        <!-- En-tête avec bouton retour -->
        <div class="flex justify-between items-center mb-8">
            <div>
                <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">
                    {% if group.id %}
                        Modifier un groupe privé
                    {% else %}
                        Créer un groupe privé
                    {% endif %}
                </h1>
                <p class="text-gray-600 dark:text-gray-400">Organisez vos participants en groupes personnalisés</p>
            </div>
            <a href="{{ path('app_groups_index') }}"
               class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-gradient-to-r from-gray-500 to-gray-600 hover:from-gray-600 hover:to-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 shadow-md hover:shadow-lg transform hover:-translate-y-0.5 transition-all duration-200 dark:focus:ring-offset-gray-800">
                <svg class="w-4 h-4 mr-2" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                </svg>
                Retour
            </a>
        </div>

        <div class="bg-white dark:bg-gray-800 shadow-lg rounded-lg overflow-hidden">
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-gray-700 dark:to-gray-800 px-6 py-4 border-b border-gray-200 dark:border-gray-700">
                <h2 class="text-lg font-semibold text-gray-900 dark:text-white flex items-center">
                    <svg class="w-5 h-5 mr-2 text-blue-600 dark:text-blue-400" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                    </svg>
                    Informations du groupe
                </h2>
            </div>

            <div class="p-8">
                <!-- Messages flash -->
                <div class="mb-6">
                    {% for message in app.flashes('error') %}
                        <div class="mb-3 bg-red-50 border border-red-200 rounded-lg p-4 flex items-start dark:bg-red-900 dark:border-red-700">
                            <svg class="w-5 h-5 text-red-500 mr-3 flex-shrink-0 mt-0.5" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <span class="text-sm text-red-700 dark:text-red-300">{{ message }}</span>
                        </div>
                    {% endfor %}
                    {% for message in app.flashes('success') %}
                        <div class="mb-3 bg-green-50 border border-green-200 rounded-lg p-4 flex items-start dark:bg-green-900 dark:border-green-700">
                            <svg class="w-5 h-5 text-green-500 mr-3 flex-shrink-0 mt-0.5" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <span class="text-sm text-green-700 dark:text-green-300">{{ message }}</span>
                        </div>
                    {% endfor %}
                </div>

                {{ form_start(form, {'attr': {'class': 'space-y-6'}}) }}

                <!-- Nom du groupe -->
                <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-6 border border-gray-200 dark:border-gray-600">
                    <div class="space-y-2">
                        {{ form_label(form.name, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2'}}) }}
                        {{ form_widget(form.name, {'attr': {'class': 'w-full rounded-lg border-gray-300 dark:border-gray-600 dark:bg-gray-800 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500 focus:ring-2 transition-all duration-200 py-3 px-4 text-base', 'placeholder': 'Ex: Mes amis proches'}}) }}
                        {{ form_errors(form.name) }}
                    </div>
                </div>

                <!-- Sélection des participants -->
                <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-6 border border-gray-200 dark:border-gray-600">
                    <div class="space-y-4">
                        <div class="flex items-center justify-between mb-4">
                            {{ form_label(form.members, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 dark:text-gray-300'}}) }}
                            <span id="selectedCount" class="text-sm text-blue-600 dark:text-blue-400 font-semibold">0 sélectionné(s)</span>
                        </div>

                        <!-- Barre de recherche -->
                        <div class="mb-4">
                            <div class="relative">
                                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                    <svg class="h-5 w-5 text-gray-400"  stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                                    </svg>
                                </div>
                                <input type="text"
                                       id="searchParticipants"
                                       class="block w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-600 dark:bg-gray-800 dark:text-white rounded-lg leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 sm:text-sm transition-all"
                                       placeholder="Rechercher un participant...">
                            </div>
                        </div>

                        <!-- Boutons de sélection rapide -->
                        <div class="flex gap-2 mb-4">
                            <button type="button"
                                    id="selectAll"
                                    class="inline-flex items-center text-xs px-3 py-1.5 bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 transition-colors dark:bg-blue-900 dark:text-blue-300 dark:hover:bg-blue-800">
                                <svg class="w-3 h-3 mr-1"  stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                </svg>
                                Tout sélectionner
                            </button>
                            <button type="button"
                                    id="deselectAll"
                                    class="inline-flex items-center text-xs px-3 py-1.5 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors dark:bg-gray-600 dark:text-gray-300 dark:hover:bg-gray-500">
                                <svg class="w-3 h-3 mr-1"  stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                </svg>
                                Tout désélectionner
                            </button>
                        </div>

                        <!-- Liste des participants en grille -->
                        <div id="participantsList" class="max-h-96 overflow-y-auto border border-gray-200 dark:border-gray-600 rounded-lg p-4 bg-white dark:bg-gray-800">
                            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
                                {{ form_widget(form.members) }}
                            </div>
                        </div>
                        {{ form_errors(form.members) }}
                    </div>
                </div>

                <!-- Boutons d'action -->
                <div class="flex gap-4 justify-end pt-6 border-t border-gray-200 dark:border-gray-600">
                    <a href="{{ path('app_groups_index') }}" class="px-6 py-2.5 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 font-medium transition-colors dark:bg-gray-600 dark:text-gray-300 dark:hover:bg-gray-500">
                        Annuler
                    </a>
                    <button type="submit" class="inline-flex items-center px-8 py-3 font-semibold text-base text-white bg-gradient-to-r from-blue-500 to-blue-600 rounded-lg shadow-md hover:from-blue-600 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transform hover:-translate-y-0.5 transition-all duration-200">
                        <svg class="w-5 h-5 mr-2" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                        </svg>
                        {{ group.id ? 'Enregistrer les modifications' : 'Créer le groupe' }}
                    </button>
                </div>

                {{ form_end(form) }}
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <style>
        /* Styles personnalisés pour les checkboxes */
        #participantsList .grid > div {
            display: flex;
            align-items: center;
        }

        #participantsList input[type="checkbox"] {
            width: 1.125rem;
            height: 1.125rem;
            margin-right: 0;
            border-radius: 0.375rem;
            border: 2px solid #D1D5DB;
            cursor: pointer;
            transition: all 0.2s ease;
            accent-color: #3B82F6;
        }

        #participantsList input[type="checkbox"]:hover {
            border-color: #3B82F6;
        }

        #participantsList input[type="checkbox"]:checked {
            background-color: #3B82F6;
            border-color: #3B82F6;
        }

        #participantsList label {
            display: flex;
            align-items: center;
            padding: 0.625rem 0.875rem;
            border: 1px solid #E5E7EB;
            border-radius: 0.5rem;
            cursor: pointer;
            transition: all 0.2s ease;
            background-color: #FFFFFF;
            gap: 0.625rem;
        }

        #participantsList label:hover {
            background-color: #EFF6FF;
            border-color: #93C5FD;
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        #participantsList input[type="checkbox"]:checked + label,
        #participantsList label:has(input[type="checkbox"]:checked) {
            background-color: #DBEAFE;
            border-color: #3B82F6;
            font-weight: 500;
        }

        /* Dark mode */
        .dark #participantsList label {
            background-color: #374151;
            border-color: #4B5563;
            color: #F3F4F6;
        }

        .dark #participantsList label:hover {
            background-color: #4B5563;
            border-color: #60A5FA;
        }

        .dark #participantsList input[type="checkbox"]:checked + label,
        .dark #participantsList label:has(input[type="checkbox"]:checked) {
            background-color: #1E3A8A;
            border-color: #3B82F6;
        }

        .dark #participantsList input[type="checkbox"] {
            border-color: #6B7280;
        }

        /* Animation du compteur */
        #selectedCount {
            animation: pulse-subtle 0.3s ease;
        }

        @keyframes pulse-subtle {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const selectedCount = document.getElementById('selectedCount');
            const searchInput = document.getElementById('searchParticipants');
            const participantsList = document.getElementById('participantsList');
            const allCheckboxes = participantsList.querySelectorAll('input[type="checkbox"]');
            const allLabels = participantsList.querySelectorAll('label');

            // Fonction pour mettre à jour le compteur
            function updateSelectedCount() {
                const count = Array.from(allCheckboxes).filter(cb => cb.checked).length;
                selectedCount.textContent = count + ' sélectionné' + (count > 1 ? 's' : '');
                selectedCount.style.animation = 'none';
                setTimeout(() => {
                    selectedCount.style.animation = 'pulse-subtle 0.3s ease';
                }, 10);
            }

            // Écouter les changements de checkbox
            participantsList.addEventListener('change', function(e) {
                if (e.target.type === 'checkbox') {
                    updateSelectedCount();
                }
            });

            // Fonction de recherche
            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();
                let visibleCount = 0;

                allLabels.forEach(function(label) {
                    const text = label.textContent.toLowerCase();
                    const parentDiv = label.parentElement;

                    if (text.includes(searchTerm)) {
                        parentDiv.style.display = 'flex';
                        visibleCount++;
                    } else {
                        parentDiv.style.display = 'none';
                    }
                });

                // Afficher un message si aucun résultat
                let noResultMsg = document.getElementById('noResultMessage');
                if (visibleCount === 0 && searchTerm !== '') {
                    if (!noResultMsg) {
                        noResultMsg = document.createElement('div');
                        noResultMsg.id = 'noResultMessage';
                        noResultMsg.className = 'col-span-full text-center py-8 text-gray-500 dark:text-gray-400';
                        noResultMsg.innerHTML = '<svg class="w-12 h-12 mx-auto mb-2 text-gray-400"  stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg><p>Aucun participant trouvé</p>';
                        participantsList.querySelector('.grid').appendChild(noResultMsg);
                    }
                } else if (noResultMsg) {
                    noResultMsg.remove();
                }
            });

            // Bouton "Tout sélectionner"
            document.getElementById('selectAll').addEventListener('click', function() {
                allLabels.forEach(function(label) {
                    const parentDiv = label.parentElement;
                    if (parentDiv.style.display !== 'none') {
                        const checkbox = label.querySelector('input[type="checkbox"]') || parentDiv.querySelector('input[type="checkbox"]');
                        if (checkbox) checkbox.checked = true;
                    }
                });
                updateSelectedCount();
            });

            // Bouton "Tout désélectionner"
            document.getElementById('deselectAll').addEventListener('click', function() {
                allCheckboxes.forEach(cb => cb.checked = false);
                updateSelectedCount();
            });

            // Initialiser le compteur
            updateSelectedCount();
        });
    </script>
{% endblock %}
